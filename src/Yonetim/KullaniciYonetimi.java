package Yonetim;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import sqlsorgular.kullanicilar;
import sqlsorgular.masalar;
import sqlsorgular.urunler;

/**
 *
 * @author ozkan
 */
public class KullaniciYonetimi extends javax.swing.JFrame {

    /**
     * Creates new form KullaniciYonetimi
     */
    public KullaniciYonetimi() {
        initComponents();
         sqlsorgular.ortalametod ortala = new sqlsorgular.ortalametod();
        ortala.Ekranoralama(this, this.getWidth(), this.getHeight());
        
        //----ToolTip Kodları-----
        
        
        jButton1.setToolTipText("Ekle");
        jRadioButton1.setToolTipText("Seç");
        jRadioButton2.setToolTipText("Seç");
        jRadioButton3.setToolTipText("Seç");
        jTextField1.setToolTipText("Kullanıcı adı giriniz");
        jTextField2.setToolTipText("Şifre giriniz");
        jButton2.setToolTipText("Kaydet");
        this.setTitle("Kullanıcı Yönetimi");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList();
        jButton6 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Geri = new javax.swing.JLabel();
        Kapama = new javax.swing.JLabel();
        Aciklama = new javax.swing.JLabel();
        Arkaplan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(153, 102, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Yeni Kullanıcı Ekle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, 250, 37));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Kullanıcı Ekle"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Kullanıcı Adı");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jLabel2.setText("Şifre");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        jRadioButton1.setText("Garson");
        jPanel2.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        jRadioButton2.setText("Mutfak");
        jPanel2.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));

        jRadioButton3.setText("Yönetici");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, -1, -1));

        jButton2.setBackground(new java.awt.Color(153, 102, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("KAYDET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 141, -1));

        jTextField1.setText("jTextField1");
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 191, -1));

        jTextField2.setText("jTextField1");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 191, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 370, 170));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Kullanıcı Adı", "Görev"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 380, 420));

        jScrollPane1.setViewportView(jList1);

        jScrollPane3.setViewportView(jList2);

        jButton4.setBackground(new java.awt.Color(153, 102, 0));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("İlişkilendir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jList3);

        jScrollPane5.setViewportView(jList4);

        jButton5.setText(">");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setText(">");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel4.setText("Mutfak ile Masaları İlişkilendir :");

        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel5.setText("Mutfak ile Ürünleri İlişkilendir :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(23, 23, 23))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButton8))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(107, 107, 107))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButton4))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, -1, 450));

        jScrollPane6.setViewportView(jList5);

        jButton6.setText(">");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(jList6);

        jButton7.setBackground(new java.awt.Color(153, 102, 0));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("İlişkilendir");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel3.setText("Garsonu Masalarla İlişkilendir :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(jScrollPane6)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jButton6)))
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(23, 23, 23))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 440, 293));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 80, 1260, 500));

        Geri.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Geri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GeriMouseClicked(evt);
            }
        });
        getContentPane().add(Geri, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 70));

        Kapama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Kapama.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Kapama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KapamaMouseClicked(evt);
            }
        });
        getContentPane().add(Kapama, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 10, 60, 50));

        Aciklama.setFont(new java.awt.Font("Calibri", 1, 55)); // NOI18N
        Aciklama.setForeground(new java.awt.Color(255, 255, 255));
        Aciklama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Aciklama.setText("Kullanıcı Yönetim Ekranı");
        getContentPane().add(Aciklama, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, -2, 1280, 80));

        Arkaplan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resimler/yonetimBos.png"))); // NOI18N
        getContentPane().add(Arkaplan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 600));

        setSize(new java.awt.Dimension(1280, 598));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    HashMap<String, String> sifreler = new HashMap<String, String>();  // kullaniciadindan sifreye ulasmak icin olustuuruldu
    String kullaniciadialinan; // guncelleye basildigi an alinan kullaniciadi sifre ve durum bu degiskenlere atanir
    String sifrealinan;
    String durumalinan;
    int row,col;
    HashMap<String, Integer> masano = new HashMap<String, Integer>(); //masaadindan masano ya ulasmak icin olusturuldu
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // + butonuna basildigi zaman yapilacak islemler 
        jPanel2.setVisible(true);
        jTextField1.setText("");
        jTextField2.setText("");
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        jPanel2.setVisible(false);
        jPanel4.setVisible(false);
        jPanel3.setVisible(false);
        KullaniciYonetimAcilis(); // popup menunun bulundugu metod
        ButtonGroup group = new ButtonGroup();
        group.add(jRadioButton1);
        group.add(jRadioButton2);
        group.add(jRadioButton3);
        List<sqlsorgular.kullanicilar> kullaniciAl = new ArrayList<>(); 
        try{
            // tum kullanicilar aliniyor
            kullaniciAl = new sqlsorgular.kullanicilar().kullaniciGetir();
        }catch(Exception e){
            Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, e);
        }
        // tabloya ekleniyor
        DefaultTableModel tablo =(DefaultTableModel)jTable1.getModel();
        tablo.setRowCount(0);
            
        Vector[] v = new Vector[kullaniciAl.size()];
        for(int n=0;n<kullaniciAl.size();n++){
            v[n] = new Vector();
            v[n].add(kullaniciAl.get(n).getKullanici_adi());
            // kullaniciadi ve sifreler hashmap e ekleniyor
            sifreler.put(kullaniciAl.get(n).getKullanici_adi(), kullaniciAl.get(n).getSifre());
            v[n].add(kullaniciAl.get(n).getDurum());
           
            tablo.addRow(v[n]);
           
        }
        
        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
        
    }//GEN-LAST:event_formComponentShown

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ButtonGroup group = new ButtonGroup();
        group.add(jRadioButton1);
        group.add(jRadioButton2);
        group.add(jRadioButton3);
        String kullanici_adi = jTextField1.getText(); // kaydet butonuna basildigi zaman alinan degerler
        String sifre = jTextField2.getText();
        String durum =" ";
        if(jRadioButton1.isSelected())
            durum="GARSON";
        else if(jRadioButton2.isSelected())
            durum="MUTFAK";
        else if(jRadioButton3.isSelected())
            durum="ADMIN";
        System.out.println(durum);
        sqlsorgular.kullanicilar kul = new kullanicilar();
        int kullanici_id2=0; // ekle icin mi yoksa guncelle me yapmak icin mi islem yapacagini belirlemek icin kullaniliyor
        
        if(!kullanici_adi.equals(" ") && !sifre.equals(" ") && !durum.equals(" "))   
        {    // eger herhangi bir yeri bos degilse islem yapilmasi icin 
            try{
                // daha onceden alinan degerler ile kullaniciid sorgulaniyor
                kullanici_id2= kul.Kullaniciid_Bul(kullaniciadialinan, sifrealinan, durumalinan);
            }catch(Exception ex){
                Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            System.out.println(kullanici_id2);
            if(kullanici_id2==0){ // eger veritabaninda bu verilere ait kullaniciid yoksa ekleme islemi yapliyor
                if(durum=="GARSON"){ // durum eger GARSON ise sadece masalarla iliskilendirme yapilacagindan o panel gorunur hale getirilir
                    jPanel3.setVisible(false);
                    jPanel4.setVisible(true);
                    MasalariCek(kullanici_id2); // masalarin cekildigi metod
                }
                else if(durum == "MUTFAK"){ // MUTFAK ta ise masalar ve urunler le iliskilendirme yapilacagindan bu panel gorunur hale getirilir
                    jPanel4.setVisible(false);
                    jPanel3.setVisible(true);
                    MasaUrunCek(kullanici_id2); // masa ve urunlerin cekildigi metod
                            
                }
                boolean dur=false;
                try{
                    // kullanici eklemesi yapilir
                    dur=kul.KullaniciEkle(kullanici_adi, sifre, durum);
                   
                    if(dur){
                        // eger basarili bir sekilde gerceklestirilmis ise tabloya eklenir
                        DefaultTableModel tablo =(DefaultTableModel)jTable1.getModel();
                
                        Vector[] v = new Vector[1];
                        for(int n=0;n<1;n++){
                            v[n] = new Vector();
                            v[n].add(kullanici_adi);
                            sifreler.put(kullanici_adi, sifre);
                            v[n].add(durum);
           
                            tablo.addRow(v[n]);
           
                        }
                        
                        jTable1.setModel(tablo);
                        jTable1.repaint();
                        jTable1.revalidate();
                        jTable1.getUpdateSelectionOnSort();
                        this.repaint();
                        this.revalidate();
                        this.validate();
                    }else{
                        JOptionPane.showMessageDialog(this, "Kullanici eklenirken hata oldu");
                    }
                
                }catch(Exception ex){
                    Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(kullanici_id2!=0){ // kullanici verilerine gore veritabaninda kullaniciid varsa guncelleme yapilir
                if(durum=="GARSON"){ // sadece masa verileri cekilir
                    jPanel3.setVisible(false);
                    jPanel4.setVisible(true);
                    
                    MasalariCek(kullanici_id2);// masanin cekildigi metod
                            
                }
                else if(durum == "MUTFAK"){ // verilere gore masa ve urun cekilir
                    jPanel4.setVisible(false);
                    jPanel3.setVisible(true);
                    MasaUrunCek(kullanici_id2); //  masa ve urun cekildigi metod
                }
                boolean dur=false;
                try{
                    // Kullanicinin guncelleme islemi yapilir
                    dur=kul.KullaniciGuncelle(kullanici_id2, kullanici_adi, sifre, durum);
                
                    if(dur){
                        // eger basarili olduysa tablaya eklenir
                        DefaultTableModel tablo =(DefaultTableModel)jTable1.getModel();
                        // alinan row degeri silinir
                        (tablo).removeRow(row);
                        
                        Vector[] v = new Vector[1];
                        for(int n=0;n<1;n++){
                            v[n] = new Vector();
                            v[n].add(kullanici_adi);
                            sifreler.put(kullanici_adi, sifre);
                            v[n].add(durum);
                            // alinan row degerine ekleme yapilir
                            tablo.insertRow(row,v[n]);
           
                        }
                        jTable1.setModel(tablo);
                        jTable1.repaint();
                        jTable1.revalidate();
                        jTable1.getUpdateSelectionOnSort();
                        this.repaint();
                        this.revalidate();
                        this.validate();
                        
        
                        
                        
                       // jPanel2.setVisible(false);
                    }else{
                        JOptionPane.showMessageDialog(this, "Kullanici güncellenirken hata oldu");
                    }
                
                }catch(Exception ex){
                    Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }else{// bosluklarin tamami doldurulmamdiysa uyari verir
            JOptionPane.showMessageDialog(this, "verilerin tamamını doldurunuz");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    // MUTFAK kullanicilari icin
    public void MasaUrunCek(int kullanici_id){ // gelen kullanici id ye gore guncelleme yada ekleme yapilmasina karar verilir
        //masa adlarinin cekilmesi
        ArrayList<sqlsorgular.masalar> tummasalar = new ArrayList<>(); // masalarin alinmasi icin kullanilan list
        sqlsorgular.masalar m = new sqlsorgular.masalar();
        try{
            // masa adlari alinir ve list e atilir
            tummasalar=(ArrayList<masalar>) m.MasaAdlari();
        }catch(Exception e){
            System.out.println("masalar cekilirken hata olustu "+ e);
        }
        // Gelen veriler JList te eklenir
        DefaultListModel masalistmodel = new DefaultListModel();
        for(int i=0;i<tummasalar.size();i++){
            masalistmodel.add(i, tummasalar.get(i).getMasa_Adi());
            masano.put(tummasalar.get(i).getMasa_Adi(), tummasalar.get(i).getMasa_No());
        }
        jList1.setModel(masalistmodel);
        jList1.validate();
        jList1.repaint();
        this.repaint();
        this.revalidate();
         //urun adlarinin cekilmesi

        ArrayList<sqlsorgular.urunler> tumurunler = new ArrayList<>(); // urun adlarinin alinmasi icin List
        sqlsorgular.urunler u = new sqlsorgular.urunler();
        try{
            // urunler alinip Listte atanir
            tumurunler=(ArrayList<urunler>) u.urunadi();
        }catch(Exception e){
            System.out.println("urunler cekilirken hata olustu "+ e);
        }
        // ve bu urunler JListte eklenir
        DefaultListModel urunlistmodel = new DefaultListModel();
        for(int i=0;i<tumurunler.size();i++){
            urunlistmodel.add(i, tumurunler.get(i).getUrun_adi());
        }
        jList4.setModel(urunlistmodel);
        jList4.validate();
        jList4.repaint();
        this.repaint();
        this.revalidate();
        if(kullanici_id!=0){
            // gelen kullanici id eger varsa veritabanindan iliskili oldugu masalar ve urunler cekilir
            int kullanici_no = 0;
            sqlsorgular.kullanicilar kul=new kullanicilar();
            
            try {
                // kullaniciid ye gore kullanicino su alinir 
                kullanici_no=kul.KullaniciNoBulByid(kullanici_id);
            } catch (SQLException ex) {
                Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
            }
            // masa_no urun_kodu masa_Adi urun_ad larinin alinmasi icin Listler
            List<Integer> MasaNo=new ArrayList<>();
            List<Integer> UrunKod=new ArrayList<>();
            List<String> UrunAdi=new ArrayList<>();
            List<String> MasaAdi=new ArrayList<>();
            try {
                // Masa no ve urun kodu veritabanindan kullanici no ya gore cekilir
                MasaNo=kul.iliskMasaMasaNoCek(kullanici_no);
                UrunKod=kul.iliskMutfakUrunKodCek(kullanici_no);
            } catch (SQLException ex) {
                Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
            }
            for(int j=0;j<MasaNo.size();j++){ // gelen masa no lara ait masa adlari sorgulanip liste atanir
                String masaad = null;
                try {
                    masaad=m.MasaAdi_Bul(MasaNo.get(j));
                } catch (SQLException ex) {
                    Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                }
                MasaAdi.add(j, masaad);
            }
            for(int i=0;i<UrunKod.size();i++){// gelen urun kodlarina gore urun adlari sorgulanip liste atanir 
                String urunad = null;
                try {
                    urunad = u.UrunAdi_Bul(UrunKod.get(i));
                } catch (SQLException ex) {
                    Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                }
                UrunAdi.add(i, urunad);
            }
            // iliskili oldugu masalar JListe eklenir
            DefaultListModel iliskmasalistmodel = new DefaultListModel();
            for(int i=0;i<MasaAdi.size();i++){
                iliskmasalistmodel.add(i, MasaAdi.get(i));
            }
            jList2.setModel(iliskmasalistmodel);
            jList2.validate();
            jList2.repaint();
            this.repaint();
            this.revalidate();
            // iliskili oldugu urunler JListe atanir
            DefaultListModel iliskurunlistmodel = new DefaultListModel();
            for(int i=0;i<UrunAdi.size();i++){
                iliskurunlistmodel.add(i, UrunAdi.get(i));
            }
            jList3.setModel(iliskurunlistmodel);
            jList3.validate();
            jList3.repaint();
            this.repaint();
            this.revalidate();
            
        }
    }
    
     // GARSON kullanicilari icin
    public void MasalariCek(int kullanici_id){ 
        // masalarin cekilmesi
        ArrayList<sqlsorgular.masalar> tummasalar = new ArrayList<>(); // tum masalarin cekilip liste alinmasi icin
        sqlsorgular.masalar m = new sqlsorgular.masalar();
        try{
            // masalarin veritabanindan alinip liste atanmasi
            tummasalar=(ArrayList<masalar>) m.MasaAdlari();
                               
        }catch(Exception e){
            System.out.println("masalar cekilirken hata olustu "+ e);
        }
        // bu degerlerin JListe eklenmesi
        DefaultListModel masalistmodel = new DefaultListModel();
        for(int i=0;i<tummasalar.size();i++){
            masalistmodel.add(i, tummasalar.get(i).getMasa_Adi());
            masano.put(tummasalar.get(i).getMasa_Adi(), tummasalar.get(i).getMasa_No());
        }
        jList5.setModel(masalistmodel);
        jList5.validate();
        jList5.repaint();
        this.repaint();
        this.revalidate();
        
        if(kullanici_id!=0){ // eger kullaniciid veritabaninda varsa iliskili oldugu masalar da JListe eklenmesi icin
            int kullanici_no = 0;
            sqlsorgular.kullanicilar kul=new kullanicilar();
            
            try {
                // kullanici no su alinir 
                kullanici_no=kul.KullaniciNoBulByid(kullanici_id);
            } catch (SQLException ex) {
                Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
            }
            // Masa no ve masa adlarinin tutulacagi Listler
            List<Integer> MasaNo=new ArrayList<>();
            List<String> MasaAdi=new ArrayList<>();
            try {
                // kullanci no ya gore iliskili oldugu masa nolar alinir
                MasaNo=kul.iliskMasaMasaNoCek(kullanici_no);
            } catch (SQLException ex) {
                Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            for(int j=0;j<MasaNo.size();j++){
                String masaad = null;
                try {// bu masa noya gore masa adlari alinip listeye eklenir
                    masaad=m.MasaAdi_Bul(MasaNo.get(j));
                } catch (SQLException ex) {
                    Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                }
                MasaAdi.add(j, masaad);
            }
            // bu degerler JList te eklenir
            DefaultListModel iliskmasalistmodel = new DefaultListModel();
            for(int i=0;i<MasaAdi.size();i++){
                iliskmasalistmodel.add(i, MasaAdi.get(i));
            }
            jList6.setModel(iliskmasalistmodel);
            jList6.validate();
            jList6.repaint();
            this.repaint();
            this.revalidate();
        }
                            
    }
    //secilen masa adlari diger JListte alir
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultListModel listmodel = new DefaultListModel(); 
        ArrayList<String> masalar = new ArrayList<>();
        try{
            //JListten secilen masa adlari masalar Listine alinir
            masalar = (ArrayList<String>) jList5.getSelectedValuesList();
        }catch(Exception e){
             JOptionPane.showMessageDialog(this, "İlişkilendirilecek Masayi seçiniz");
        }
        // masalar listesinden ise JListe eklenir
        for(int i=0; i<masalar.size();i++){
            listmodel.add(i, masalar.get(i));
        }
        jList6.setModel(listmodel);
        jList6.validate();
        jList6.repaint();
        this.repaint();
        this.revalidate();
    }//GEN-LAST:event_jButton6ActionPerformed
//Garson ile masayi iliskilendirme butonu
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        int size = jList6.getModel().getSize(); //JListe bulunan verinin uzunlugu alinir
        String[] AlinanmasaListe = new String[(size)]; // ve listenin uzunlugu olarak belirlenir
        for(int i=0;i<size;i++){ // JLste bulunan veriler alinanmasalite sine atanir
            AlinanmasaListe[i] = jList6.getModel().getElementAt(i).toString();
            System.out.println("masa ad : "+AlinanmasaListe[i]);
        }
        // girilen kullaniciadi sifre ve durum degerleri alinir ve degiskenlere atanir
        String kullanici_adi = jTextField1.getText();
        String sifre = jTextField2.getText();
        String durum =" ";
        if(jRadioButton1.isSelected())
            durum="GARSON";
        else if(jRadioButton2.isSelected())
            durum="MUTFAK";
        else if(jRadioButton3.isSelected())
            durum="ADMIN";
        sqlsorgular.kullanicilar k = new kullanicilar();
        int kullanicino = 0;
        try {
            // Alinan degerlere gore Kullanicino bulunur
            kullanicino=k.KullaniciNo_Bul(kullanici_adi, sifre, durum);
        } catch (SQLException ex) {
            Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        sqlsorgular.masalar m =new masalar();
        boolean d= m.iliskMasaSil(kullanicino); // ilk olarak iliks_masa da ki degerleri silinir 
        if(d){// eger basarili gerceklesirse ekleme islemi yapilir
            boolean dur=false;
            for(int i=0;i<size;i++){ 
                int masanum=masano.get(AlinanmasaListe[i]); // masa adina gore hashmapten masa nosu alinir
                dur=m.iliskMasaEkleme(masanum, kullanicino); // ve veritabanindaki iliski masa tablosuna eklenir
            }
            if(dur) // eger islem basariliysa mesaj gosterilir
                JOptionPane.showMessageDialog(this, "Garson masalarla iliskilendirildi ");
            jPanel4.setVisible(false);
            jPanel2.setVisible(false);
        }
        
        
    }//GEN-LAST:event_jButton7ActionPerformed
 // Mutfak kullanicilari icin secilen urunadlari diger JListe aktarilir
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        DefaultListModel listmodel = new DefaultListModel(); 
        ArrayList<String> urunler = new ArrayList<>();
        try{
            // secilen urunadlari alinip listeye atanir
            urunler = (ArrayList<String>) jList4.getSelectedValuesList();
        }catch(Exception e){
             JOptionPane.showMessageDialog(this, "İlişkilendirilecek Masayi seçiniz");
        }
        // bunlar JListe aktarilir
        for(int i=0; i<urunler.size();i++){
            listmodel.add(i, urunler.get(i));
        }
        jList3.setModel(listmodel);
        jList3.validate();
        jList3.repaint();
        this.repaint();
        this.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed
// Mutfak kullaniciclari icin secilen masa adlari diger JListe aktarilir
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        DefaultListModel listmodel = new DefaultListModel(); 
        ArrayList<String> masalar = new ArrayList<>();
        try{// secilen masaadlari alinip liste aktarilir
            masalar = (ArrayList<String>) jList1.getSelectedValuesList();
        }catch(Exception e){
             JOptionPane.showMessageDialog(this, "İlişkilendirilecek Masayi seçiniz");
        }
        // bu masaadlari JListe eklenir
        for(int i=0; i<masalar.size();i++){
            listmodel.add(i, masalar.get(i));
        }
        jList2.setModel(listmodel);
        jList2.validate();
        jList2.repaint();
        this.repaint();
        this.revalidate();
    }//GEN-LAST:event_jButton8ActionPerformed
// Mutfak ile Masa ve urunun iliskilendrilmesi 
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int size = jList2.getModel().getSize(); // secilen masa adlarinin uzunlugu
        int size1 = jList3.getModel().getSize(); // secilen urun adlarinin uzunlugu
        String[] AlinanmasaListe = new String[(size)];//masaadi uzunluguna gore liste olusturulur
        String[] AlinanurunListe = new String[(size1)]; // urunadi uzunluguna gore liste olusturulur
        for(int i=0;i<size;i++){  // secilen masa adlari listeye atanir
            AlinanmasaListe[i] = jList2.getModel().getElementAt(i).toString();
            System.out.println("masa ad : "+AlinanmasaListe[i]);
        }
        for(int i=0;i<size1;i++){ // secilen urun adlari listeye atanir
            AlinanurunListe[i] = jList3.getModel().getElementAt(i).toString();
            System.out.println("urun ad : "+AlinanurunListe[i]);
        }
        // girilen kullaniciadi sifre ve durum bilgiler alinir
        String kullanici_adi = jTextField1.getText();
        String sifre = jTextField2.getText();
        String durum =" ";
        if(jRadioButton1.isSelected())
            durum="GARSON";
        else if(jRadioButton2.isSelected())
            durum="MUTFAK";
        else if(jRadioButton3.isSelected())
            durum="ADMIN";
        sqlsorgular.kullanicilar k = new kullanicilar();
        int kullanicino = 0;
        try {
            // bu degerlere gore kullanicino bulunur
            kullanicino=k.KullaniciNo_Bul(kullanici_adi, sifre, durum);
        } catch (SQLException ex) {
            Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
        }
        sqlsorgular.masalar m =new masalar();
        // ilk olarak ilisk_masa ve iliski_mutfaktaki veriler silinir 
        boolean d=m.iliskMasaSil(kullanicino);
        boolean d1=m.iliskMutfakSil(kullanicino);
        if(d && d1){ // basarili olursa eger ekleme islemi yapilir
            boolean dur=false, dur1=false;
            for(int i=0;i<size;i++){ 
                // masa adina gore hashmapte msano alinir 
                int masanum=masano.get(AlinanmasaListe[i]);
                // ve masa no ile kullanici noya gore veritabaninda ilisk_masa tablasuna ekleme yapilir
                dur=m.iliskMasaEkleme(masanum, kullanicino);
            }
            sqlsorgular.urunler u = new urunler();
            for(int i=0;i<size1;i++){
                try {
                // urun adina gore urun kodu bulunur
                    int urunkod=u.Urunkodu_Bul(AlinanurunListe[i]);
                // ve bu urun kodu ve kullanici no ya gore veritabanindaki ilisk_mutfak tablosuna ekleme yapilir
                    dur1=m.iliskiMutfakEkleme(kullanicino, urunkod);
                } catch (SQLException ex) {
                    Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
            if(dur && dur1) // eger iki islemde basarili gerceklesmisse mesaj gosterilir
                JOptionPane.showMessageDialog(this, "Mutfak masalarla ve urunlerle iliskilendirildi ");
            jPanel3.setVisible(false);
            jPanel2.setVisible(false);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void KapamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KapamaMouseClicked
       this.dispose();
    }//GEN-LAST:event_KapamaMouseClicked

    private void GeriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GeriMouseClicked
        YonetimEkrani yonetim = new YonetimEkrani();
        this.dispose();
        yonetim.setVisible(true);
    }//GEN-LAST:event_GeriMouseClicked
    // Popup menunun eklenmesi
    public void KullaniciYonetimAcilis(){ 
        jTable1.addMouseListener(new MouseAdapter() {
        public void mousePressed(MouseEvent me) {
            if ( SwingUtilities.isRightMouseButton(me) ) {      
                jTable1.rowAtPoint(me.getPoint());   

                JPopupMenu menu = new JPopupMenu();
                JMenuItem itemRemove = new JMenuItem("Kullanıcı Sil");
                // kullanici Sil icin 
                itemRemove.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                       
                        sqlsorgular.kullanicilar kul = new kullanicilar();
                        // tabloda islem yapilacak kullanici adi durum alinir
                        String kullanici_adi  =(String) jTable1.getModel().getValueAt(jTable1.rowAtPoint(me.getPoint()),0);
                        String durum = (String) jTable1.getModel().getValueAt(jTable1.rowAtPoint(me.getPoint()),1);
                        // kullanici adina gore hashmapten sifre alinir
                        String sifre = sifreler.get((String) jTable1.getModel().getValueAt(jTable1.rowAtPoint(me.getPoint()),0));
                        System.out.println(kullanici_adi);
                        int kullanici_id=0;
                        try{
                            // bu degerlere gore kullanici_id bulunur
                            kullanici_id= kul.Kullaniciid_Bul(kullanici_adi, sifre, durum.toUpperCase());
                        }catch(Exception ex){
                            Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        boolean dur=false;
                        try{
                            // bu kullanici id ye gore silme islemi yapilir
                            dur=kul.KullaniciSil(kullanici_id);
                            if(dur){
                                // eger islem basariliysa tablodan bu veri silinir
                                DefaultTableModel tablo =(DefaultTableModel)jTable1.getModel();
                                (tablo).removeRow(jTable1.convertRowIndexToModel(jTable1.rowAtPoint(me.getPoint())));
                
                            }else{
                                System.out.println("Silinirken hata olustu");
                            }
                        }catch(Exception ex){
                            Logger.getLogger(KullaniciYonetimi.class.getName()).log(Level.SEVERE, null, ex);
                        }
                }
                });
                JMenuItem itemupdate = new JMenuItem("Kullanıcı Güncelle");
                // Kullanici guncelleme islemi
                itemupdate.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    jPanel2.setVisible(true);// Guncellenecek degerin verileri alinarak kullaniciadi sifre durum ifadelerine aktarilir
                    sqlsorgular.kullanicilar kul = new kullanicilar();
                    // Degerin verileri ise asagidaki ifadelerle alinir
                    kullaniciadialinan  =(String) jTable1.getModel().getValueAt(jTable1.rowAtPoint(me.getPoint()),0);
                    durumalinan = (String) jTable1.getModel().getValueAt(jTable1.rowAtPoint(me.getPoint()),1);
                    sifrealinan = sifreler.get((String) jTable1.getModel().getValueAt(jTable1.rowAtPoint(me.getPoint()),0));
                    // jtable da islem yapilan row degeri alinir 
                    row=jTable1.rowAtPoint(me.getPoint());
                    // ve alinan bu degerler jTextfieldlara yazilir
                    jTextField1.setText(kullaniciadialinan);
                    jTextField2.setText(sifrealinan);
                    if(durumalinan.equals("GARSON"))
                        jRadioButton1.setSelected(true);
                    else if(durumalinan.equals("MUTFAK"))
                        jRadioButton2.setSelected(true);
                    if(durumalinan.equals("ADMIN"))
                        jRadioButton3.setSelected(true);
                }
                });
                menu.add(itemupdate);
                menu.add(itemRemove);
                menu.show(jTable1, me.getPoint().x, me.getPoint().y);            
            }
        }
    });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KullaniciYonetimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KullaniciYonetimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KullaniciYonetimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KullaniciYonetimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               KullaniciYonetimi yon = new KullaniciYonetimi();
               yon.setTitle("Kullanıcı Yönetimi");
               yon.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Aciklama;
    private javax.swing.JLabel Arkaplan;
    private javax.swing.JLabel Geri;
    private javax.swing.JLabel Kapama;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JList jList5;
    private javax.swing.JList jList6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
