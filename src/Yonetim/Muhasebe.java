/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Yonetim;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import sqlsorgular.muhasebe;
import sqlsorgular.urunler;

/**
 *
 * @author ozkan
 */
public class Muhasebe extends javax.swing.JFrame {

    /**
     * Creates new form Muhasebe
     */
    public Muhasebe() {
        initComponents();
         sqlsorgular.ortalametod ortala = new sqlsorgular.ortalametod();
        ortala.Ekranoralama(this, this.getWidth(), this.getHeight());
        jCheckBox1.addItemListener(new ItemListener() { //Tarihler arasi arama checkbox degisimini takip eder
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.DESELECTED) {
                    comboAyBaslangic.setEnabled(false);
                    comboAyBitis.setEnabled(false);
                    comboYilBaslangic.setEnabled(false);
                    comboYilBitis.setEnabled(false);
                    jButton1.setEnabled(false);
                    comboGunBaslangic.setEnabled(false);
                    comboGunBitis.setEnabled(false);
                } else {
                    comboAyBaslangic.setEnabled(true);
                    comboAyBitis.setEnabled(true);
                    comboYilBaslangic.setEnabled(true);
                    comboYilBitis.setEnabled(true);
                    jButton1.setEnabled(true);
                    comboGunBaslangic.setEnabled(true);
                    comboGunBitis.setEnabled(true);
                }

            }
        });
        jComboBox3.addItemListener(urunGrupComboListener);
       
        MuhasebeAcilis();
        StokAcilis();
        this.setTitle("Muhasebe");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        comboAyBaslangic = new javax.swing.JComboBox<>();
        comboYilBaslangic = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboAyBitis = new javax.swing.JComboBox<>();
        comboYilBitis = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        comboGunBitis = new javax.swing.JComboBox<>();
        comboGunBaslangic = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ürün Adı", "Güncel Stok", "Son Güncelleme"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtrele"));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ürün Adına Göre" }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });
        jComboBox4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox4MouseClicked(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ürün Grubuna Göre" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setText("Tümünü Listele");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Yeni Stok Kaydı Ekle");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1119, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Stok", jPanel2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sipariş No", "Toplam Tutar", "Tarih"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtrele"));

        comboAyBaslangic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AY", "OCAK", "ŞUBAT", "MART", "NİSAN", "MAYIS", "HAZİRAN", "TEMMUZ", "AĞUSTOS", "EYLÜL", "EKİM", "KASIM", "ARALIK" }));

        comboYilBaslangic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YIL", " " }));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel1.setText("-");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 3, 24)); // NOI18N
        jLabel2.setText("/");

        jLabel3.setFont(new java.awt.Font("Noto Sans", 3, 24)); // NOI18N
        jLabel3.setText("/");

        comboAyBitis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AY", "OCAK", "ŞUBAT", "MART", "NİSAN", "MAYIS", "HAZİRAN", "TEMMUZ", "AĞUSTOS", "EYLÜL", "EKİM", "KASIM", "ARALIK" }));

        comboYilBitis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YIL", " " }));

        jButton1.setBackground(new java.awt.Color(37, 169, 1));
        jButton1.setText("UYGULA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("İki Tarih Arasını Listele");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(comboGunBaslangic, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboAyBaslangic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(comboYilBaslangic, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(comboGunBitis, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboAyBitis, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(comboYilBitis, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(54, 54, 54))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(comboAyBaslangic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboGunBaslangic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboYilBaslangic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(4, 4, 4)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboYilBitis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(comboAyBitis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboGunBitis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtrele"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "İşlem Tipi", "Nakit", "Kredi Kartı" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listeleme Şekli", "Günlük", "Aylık", "Yıllık" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jButton2.setText("Tümünü Listele");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(216, 186, 25));
        jButton3.setText("Filtreleri Kaldır");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(700, 700, 700)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Muhasebe", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDate localDate = LocalDate.now();
    //Stok tablosuna çekilen verilerin atıldığı listeler
    ArrayList<Integer> StokUrunNoList;
    ArrayList<String> StokUrunAdiList;
    ArrayList<Integer> StokAdetList;
    ArrayList<Integer> StokUrunGrupNoList;
    ArrayList<String> StokTarihList;
    ///Stok tablosu listeleri sonu
    DefaultTableModel StokFullTable;

    //muhasebebilgilerinin ayrı ayrı listeye alınıp kolay bir sekilde kullanilması icin asagidaki listler olusturuldu
    ArrayList<String> muhasebesiparisnolist;//*
    ArrayList<Integer> muhasebemasanolist;//*
    ArrayList<Integer> muhasebeurunkodulist;//*
    ArrayList<String> muhasebeodemetipilist;//*
    ArrayList<Float> muhasebefiyatlist;//*
    ArrayList<String> muhasebetarihlist;//*
    ArrayList<Float> muhasebeindirimlist;//*
    ArrayList<Integer> muhasebeadetlist;//*
    ArrayList<Float> muhasebetutar;// indirim orani dahil edilerek tutar hesaplamasi yapilip bu liste atılır
    //Stok ekraninda bulunan ürüngruplarina göre filtreleme comboboxının item listeneri:
    ItemListener urunGrupComboListener = new ItemListener() {
        @Override
        public void itemStateChanged(ItemEvent e) {

            if (jComboBox3.getSelectedIndex() == 0) {
                HepsiniGoster();
            } else {
                int urunGrupNo = StokUrunGrupNoList.get(jComboBox3.getSelectedIndex() - 1);
                List<sqlsorgular.urunler> urunList = null;
                try {
                    urunList = new sqlsorgular.urunler().UrunBulByUrunGrup(urunGrupNo);
                } catch (SQLException ex) {
                    Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultTableModel tablo = (DefaultTableModel) jTable2.getModel();
                tablo.setRowCount(0);
                Vector[] v = new Vector[urunList.size()];
                for (int i = 0; i < urunList.size(); i++) {
                    int urunNo = urunList.get(i).getUrun_kodu();
                    int index = 0;
                    v[i] = new Vector();
                    for (Integer urun : StokUrunNoList) {
                        if (urun == urunNo) {
                            v[i].add(StokUrunAdiList.get(index));
                            v[i].add(StokAdetList.get(index));
                            v[i].add(StokTarihList.get(index));
                        }

                        index++;
                    }
                    tablo.insertRow(0, v[i]);
                }
                jTable2.setModel(tablo);
                jTable2.revalidate();
                jTable2.repaint();
                Muhasebe.this.revalidate();
                Muhasebe.this.repaint();

            }
        }

    };
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox4MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox4MouseClicked

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
        int index = jComboBox4.getSelectedIndex() - 1;
        DefaultTableModel tabloModel = (DefaultTableModel) jTable2.getModel();
        jTable2.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (jComboBox1.getSelectedIndex() == 1) {
            //NAKİT METODU
            muhasebeNakitListele();
        } else if (jComboBox1.getSelectedIndex() == 2) {
            //Kredikartı metodu
            muhasebeKrediKartListele();
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        if (jComboBox2.getSelectedIndex() == 1) {
            //Günlük secenegine tıklandigi zaman
            muhasebeGunlukTutar();

        } else if (jComboBox2.getSelectedIndex() == 2) {
            //Aylik secenegine tıklandigi zaman

            muhasebeAylikTutar();

        } else if (jComboBox2.getSelectedIndex() == 3) {
            //Yıllık secenegine basıldıgı zaman
            muhasebeYillikTutar();

        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MuhasebeAcilis();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //  iki tarih arasinda listeleme 

        // comboboxlardan degerlerin alinip degiskenlere atanmasi
        String baslangicgun = String.valueOf(comboGunBaslangic.getSelectedItem());
        String baslangicay = String.valueOf(comboAyBaslangic.getSelectedIndex());
        String baslangicyil = String.valueOf(comboYilBaslangic.getSelectedItem());
        String bitisgun = String.valueOf(comboGunBitis.getSelectedItem());
        String bitisay = String.valueOf(comboAyBitis.getSelectedIndex());
        String bitisyil = String.valueOf(comboYilBitis.getSelectedItem());
        // eger tek karakterliyse basina 0 konulmasi icin yazilmis kosullar
        if (baslangicgun.toCharArray().length == 1) {
            baslangicgun = "0" + baslangicgun;
        }
        if (baslangicay.toCharArray().length == 1) {
            baslangicay = "0" + baslangicay;
        }
        if (bitisgun.toCharArray().length == 1) {
            bitisgun = "0" + bitisgun;
        }
        if (bitisay.toCharArray().length == 1) {
            bitisay = "0" + bitisay;
        }
        // alinan degerlerin birlestirilip baska bir degiskene atilmasi
        String baslangictarih = baslangicyil + "-" + baslangicay + "-" + baslangicgun;
        String bitistarih = bitisyil + "-" + bitisay + "-" + bitisgun;
        sqlsorgular.muhasebe m = new muhasebe();
        List<String> tarihlist = new ArrayList<>(); //veritabanindan bu iki tarih arasindaki tarihlerin alinmasinda kullanilan degisken
        List<String> siparisnolist = new ArrayList<>();// siparis_nolarin toplanmasi icin degisken
        List<Float> tutarlist = new ArrayList<>(); // tutarlarin alinmasi icin liste
        List<String> tarihlerlist = new ArrayList<>();// tarihlerin alinmasi icin degisken
        try {
            // tarihlerin veritabanindan alinmasi
            tarihlist = m.ikiTarihArasiListele(baslangictarih, bitistarih);
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }

        String[] tarihsaat; // veritabanindan gelen tarihlerin tarih ve saat kisminin ayrilmasi icin
        int k = 0; // ekleme yapilan listelerin indexinin belirlenmesi icin
        for (int i = 0; i < tarihlist.size(); i++) {

            for (int j = 0; j < muhasebetarihlist.size(); j++) {
                tarihsaat = muhasebetarihlist.get(j).split(" "); // bolme islemi
                // veritabanindan alinan tarihler ile tum tarihlerin bulundugu liste karsilastirilir 
                // eger esitse bu indexte bulunan siparisno, tutar, ve tarih alinir
                if (tarihlist.get(i).equals(tarihsaat[0])) {
                    siparisnolist.add(k, muhasebesiparisnolist.get(j));
                    tutarlist.add(k, muhasebetutar.get(j));
                    tarihlerlist.add(k, muhasebetarihlist.get(j));

                }
            }
        }
        // tabloya aktarma
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);

        Vector[] v = new Vector[tarihlist.size()];
        for (int n = 0; n < tarihlist.size(); n++) {
            v[n] = new Vector();
            v[n].add(siparisnolist.get(n));
            v[n].add(tutarlist.get(n));
            v[n].add(tarihlerlist.get(n));
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        StokAcilis();
        HepsiniGoster();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        StokEkle ekle = new StokEkle();
        ekle.StokEkleAcilis();
        ekle.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        ekle.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowGainedFocus
    public void muhasebeYillikTutar() { // yillik tutar hesabi icin metod
        List<String> tarihlist = new ArrayList<>();   // veritabaninda bulunan tum yılları(tekrarı olmadan) aldigimizda kullanacagimiz degisken
        List<String> tarihyilliste = new ArrayList<>(); // o yıla a ait tum tarihi tutmak icin
        List<Float> tutaryil = new ArrayList<>(); //o yıl a ait tutarlari tutmak icin
        sqlsorgular.muhasebe m = new muhasebe();
        try {
            tarihlist = m.GunAyYil(3); //veritabaninda bulunan tum yılları alıp degiskene atanir
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] tarihyil; // daha sonra tarih te split ile bolunup yil kısmı buraya aliniyor
        String[] tarihsaat;// split ile once saat ve tarihi bolup tarihi bu degiskene atılıyor
        int k = 0, t = 0; // listelere degisken atarken index kısmı ıcın kullaniliyor
        String tar = "";//tarihi almak icin kullaniliyor

        for (int i = 0; i < tarihlist.size(); i++) {
            
            //Gelen yillistesine gore ilk for acildi
            float toplamtutar = 0; //toplam tutar hesabı icin 
            for (int j = 0; j < muhasebetarihlist.size(); j++) {
                // ayirma islemi yapilir
                tarihsaat = muhasebetarihlist.get(j).split(" ");
                tarihyil = tarihsaat[0].split("-");
                //tarihay=tarihay[1].split("0"); // veritabanindan 4 gibi tek sayi ile geldiginden 0 ın atilmasi icin bu ayrim yapildi
                
                // gunlistesindeki degiskenlerle karsilastirilir yillar ayniysa islem yapilir
                if (tarihlist.get(i).equals(tarihyil[0])) {
                    
                    //tutar hesabi ve tarih bilgisinin degiskene atilmasi
                    toplamtutar = toplamtutar + muhasebetutar.get(j);
                    
                    tar = tarihyil[0];

                }

            }
            //degiskenlerin listelere eklenmesi
            tarihyilliste.add(k, tar);
            
            k++;
            tutaryil.add(t, toplamtutar);
            t++;
        }
        //ve en son tabloya atilmasi
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);

        Vector[] v = new Vector[tarihyilliste.size()];
        for (int n = 0; n < tarihyilliste.size(); n++) {
            v[n] = new Vector();
            v[n].add(null);
            v[n].add(tutaryil.get(n));
            v[n].add(tarihyilliste.get(n));
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
    }

    public void muhasebeAylikTutar() {// aylik tutar hesabi icin metod

        List<String> tarihlist = new ArrayList<>();   // veritabaninda bulunan tum aylari(tekrarı olmadan) aldigimizda kullanacagimiz degisken
        List<String> tarihayliste = new ArrayList<>(); // o ay a ait tum tarihi tutmak icin
        List<Float> tutaray = new ArrayList<>(); //o ay a ait tutarlari tutmak icin
        sqlsorgular.muhasebe m = new muhasebe();
        try {
            tarihlist = m.GunAyYil(2); //veritabaninda bulunan tum aylari alıp degiskene atanir
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] tarihay; // daha sonra tarih te split ile bolunup ay kısmı buraya aliniyor
        String[] tarihsaat;// split ile once saat ve tarihi bolup tarihi bu degiskene atılıyor
        int k = 0, t = 0; // listelere degisken atarken index kısmı ıcın kullaniliyor
        String tar = "";//tarihi almak icin kullaniliyor

        for (int i = 0; i < tarihlist.size(); i++) {
            
            //Gelen aylistesine gore ilk for acildi
            float toplamtutar = 0; //toplam tutar hesabı icin 
            for (int j = 0; j < muhasebetarihlist.size(); j++) {
                // ayirma islemi yapilir
                tarihsaat = muhasebetarihlist.get(j).split(" ");
                tarihay = tarihsaat[0].split("-");
                tarihay = tarihay[1].split("0"); // veritabanindan 4 gibi tek sayi ile geldiginden 0 ın atilmasi icin bu ayrim yapildi
                
                // gunlistesindeki degiskenlerle karsilastirilir gunler ayniysa islem yapilir
                if (tarihlist.get(i).equals(tarihay[1])) {
                    
                    //tutar hesabi ve tarih bilgisinin degiskene atilmasi
                    toplamtutar = toplamtutar + muhasebetutar.get(j);
                    
                    tar = tarihay[1];

                }

            }
            //degiskenlerin listelere eklenmesi
            tarihayliste.add(k, tar);
            
            k++;
            tutaray.add(t, toplamtutar);
            t++;
        }
        //ve en son tabloya atilmasi
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);

        Vector[] v = new Vector[tarihayliste.size()];
        for (int n = 0; n < tarihayliste.size(); n++) {
            v[n] = new Vector();
            v[n].add(null);
            v[n].add(tutaray.get(n));
            v[n].add(tarihayliste.get(n));
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
    }

    public void muhasebeGunlukTutar() { // gunluk tutar hesaplama metodu
        List<String> tarihlist = new ArrayList<>();   // veritabaninda bulunan tum gunleri(tekrarı olmadan) aldigimizda kullanacagimiz degisken
        List<String> tarihgunliste = new ArrayList<>(); // o gune ait tum tarihi tutmak icin
        List<Float> tutargun = new ArrayList<>(); //o gune ait tutarlari tutmak icin
        sqlsorgular.muhasebe m = new muhasebe();
        try {
            tarihlist = m.GunAyYil(1); //veritabaninda bulunan tum gunleri alıp degiskene atanir
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] tarihgun; // daha sonra tarih te split ile bolunup gun kısmı buraya aliniyor
        String[] tarihsaat;// split ile once saat ve tarihi bolup tarihi bu degiskene atılıyor
        int k = 0, t = 0; // listelere degisken atarken index kısmı ıcın kullaniliyor
        String tar = "";//tarihi almak icin kullaniliyor

        for (int i = 0; i < tarihlist.size(); i++) {
            //Gelen gunlistesine gore ilk for acildi
            float toplamtutar = 0; //toplam tutar hesabı icin 
            for (int j = 0; j < muhasebetarihlist.size(); j++) {
                // ayirma islemi yapilir
                tarihsaat = muhasebetarihlist.get(j).split(" ");
                tarihgun = tarihsaat[0].split("-");
                
                // gunlistesindeki degiskenlerle karsilastirilir gunler ayniysa islem yapilir
                if (tarihlist.get(i).equals(tarihgun[2])) {
                  
                    //tutar hesabi ve tarih bilgisinin degiskene atilmasi
                    toplamtutar = toplamtutar + muhasebetutar.get(j);
                   
                    tar = muhasebetarihlist.get(j);

                }

            }
            //degiskenlerin listelere eklenmesi
            tarihgunliste.add(k, tar);
            
            k++;
            tutargun.add(t, toplamtutar);
            t++;
        }
        //ve en son tabloya atilmasi
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);

        Vector[] v = new Vector[tarihgunliste.size()];
        for (int n = 0; n < tarihgunliste.size(); n++) {
            v[n] = new Vector();
            v[n].add(null);
            v[n].add(tutargun.get(n));
            tarihsaat = muhasebetarihlist.get(n).split(" ");
            v[n].add(tarihsaat[0]);
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
    }

    public void muhasebeNakitListele() {
        // veritabanında nakit odeme sekline sahip verilerin tabloya alınması 
    
        // bu listeler ise nakit odeme sekline sahip verilerin ayrı bir sekilde listelenmesi icin
        List<String> nakitsiparisno = new ArrayList<>();
        List<String> nakittarih = new ArrayList<>();
        List<Float> nakittutar = new ArrayList<>();
        int j = 0;
        for (int i = 0; i < muhasebeodemetipilist.size(); i++) {
            if (muhasebeodemetipilist.get(i).equals("NAKIT")) {
                // nakit odeme sekline sahip veriler listelere ekleniyor
                nakitsiparisno.add(j, muhasebesiparisnolist.get(i));
                nakittarih.add(j, muhasebetarihlist.get(i));
                nakittutar.add(j, muhasebetutar.get(i));
                j++;
            }
        }
        // bu veriler tabloya atılır
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);

        Vector[] v = new Vector[nakitsiparisno.size()];
        for (int n = 0; n < nakitsiparisno.size(); n++) {
            v[n] = new Vector();
            v[n].add(nakitsiparisno.get(n));
            v[n].add(nakittutar.get(n));
            v[n].add(nakittarih.get(n));
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
    }

    public void muhasebeKrediKartListele() {
        // veritabanında kredi kartı odeme sekline sahip verilerin tabloya alınması  listelenmesi
       

        // bu listeler ise kredi kart odeme sekline sahip verilerin ayrı bir sekilde listelenmesi icin
        List<String> kartsiparisno = new ArrayList<>();
        List<String> karttarih = new ArrayList<>();
        List<Float> karttutar = new ArrayList<>();
        int j = 0;
        for (int i = 0; i < muhasebeodemetipilist.size(); i++) {
            if (muhasebeodemetipilist.get(i).equals("KREDI KARTI")) {
                // kredi kartı odeme sekline sahip veriler listelere ekleniyor
                kartsiparisno.add(j, muhasebesiparisnolist.get(i));
                karttarih.add(j, muhasebetarihlist.get(i));
                karttutar.add(j, muhasebetutar.get(i));
                j++;
            }
        }
        // bu veriler tabloya atılır
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);

        Vector[] v = new Vector[kartsiparisno.size()];
        for (int n = 0; n < kartsiparisno.size(); n++) {
            v[n] = new Vector();
            v[n].add(kartsiparisno.get(n));
            v[n].add(karttutar.get(n));
            v[n].add(karttarih.get(n));
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
    }

    public void MuhasebeAcilis() {
        comboGunBaslangic.setEnabled(false);
        comboGunBitis.setEnabled(false);
        muhasebesiparisnolist = new ArrayList<>();
        muhasebemasanolist = new ArrayList<>();
        muhasebeurunkodulist = new ArrayList<>();
        muhasebeodemetipilist = new ArrayList<>();
        muhasebefiyatlist = new ArrayList<>();
        muhasebetarihlist = new ArrayList<>();
        muhasebeindirimlist = new ArrayList<>();
        muhasebeadetlist = new ArrayList<>();
        muhasebetutar = new ArrayList<>();

        jCheckBox1.setSelected(true);
        jCheckBox1.setSelected(false);
        //Yıl Comboboxlari dolduruluyor
        DefaultComboBoxModel comboYil = new DefaultComboBoxModel();
        DefaultComboBoxModel comboYil1 = new DefaultComboBoxModel();
        comboYil.addElement("YIL");
        comboYil1.addElement("YIL");
        for (int i = localDate.getYear(); i >= 2000; i--) { //2000 yilina kadar olan tüm yıllari comboboxa yüklüyor
            comboYil.addElement(i);
            comboYil1.addElement(i);
        }
        comboYilBaslangic.setModel(comboYil);
        comboYilBaslangic.repaint();
        comboYilBitis.setModel(comboYil1);
        comboYilBitis.repaint();
        //Gunleri Comboboxlari dolduruluyor
        DefaultComboBoxModel comboGun = new DefaultComboBoxModel();
        DefaultComboBoxModel comboGun1 = new DefaultComboBoxModel();
        comboGun.addElement("GUN");
        comboGun1.addElement("GUN");
        for (int i = 31; i >= 1; i--) {
            comboGun.addElement(i);
            comboGun1.addElement(i);
        }
        comboGunBaslangic.setModel(comboGun);
        comboGunBaslangic.repaint();
        comboGunBitis.setModel(comboGun1);
        comboGunBitis.repaint();

        //muhasebe ekranından tabloya atılacak veriler cekilir
        sqlsorgular.muhasebe muh = new muhasebe();
        List<sqlsorgular.muhasebe> muhasbeBilgi = null;
        try {
            muhasbeBilgi = muh.muhasebeBilgiAl();
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (int i = 0; i < muhasbeBilgi.size(); i++) {
            //Veritabanından alınan veriler ilgili arraylistlere atanır
            muhasebesiparisnolist.add(i, muhasbeBilgi.get(i).getSiparis_no());
            muhasebemasanolist.add(i, muhasbeBilgi.get(i).getMasa_no());
            muhasebeurunkodulist.add(i, muhasbeBilgi.get(i).getUrun_kodu());
            muhasebetarihlist.add(i, muhasbeBilgi.get(i).getTarih());
            muhasebeadetlist.add(i, muhasbeBilgi.get(i).getAdet());
            muhasebeodemetipilist.add(i, muhasbeBilgi.get(i).getOdeme_tipi());
            muhasebeindirimlist.add(i, muhasbeBilgi.get(i).getIndirim_orani());
            muhasebefiyatlist.add(i, muhasbeBilgi.get(i).getFiyat());
        }

        /*  try {
            //veritabanından gelen fiyatlar liste atanır
            muhasebefiyatlist=muh.fiyatAl();
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }*/
      
        for (int j = 0; j < muhasebefiyatlist.size(); j++) {
            // tutar hesaplaması gerceklestirilir
            muhasebetutar.add(j, (muhasebefiyatlist.get(j) * muhasebeadetlist.get(j)) - (muhasebefiyatlist.get(j) * muhasebeadetlist.get(j) * muhasebeindirimlist.get(j)));
            

        }

        // tabloya atama yapılır
        DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
        tablo.setRowCount(0);
        /*for (Float f : muhasebetutar) {
            System.out.println(f);
        }*/
        Vector[] v = new Vector[muhasebefiyatlist.size()];
        for (int n = 0; n < muhasebefiyatlist.size(); n++) {
            v[n] = new Vector();
            v[n].add(muhasebesiparisnolist.get(n));
            v[n].add(muhasebetutar.get(n));
            v[n].add(muhasebetarihlist.get(n));
            tablo.insertRow(n, v[n]);

        }

        jTable1.setModel(tablo);
        jTable1.repaint();
        jTable1.revalidate();
        jTable1.getUpdateSelectionOnSort();
        this.repaint();
        this.revalidate();
        this.validate();
        MuhasebeDetayMenu();
    }

    public void MuhasebeDetayMenu() {
        jTable1.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                if (SwingUtilities.isRightMouseButton(me)) {
                    jTable1.rowAtPoint(me.getPoint());

                    JPopupMenu menu = new JPopupMenu();
                    JMenuItem muhdetay = new JMenuItem("Muhasebe Detay");
                    muhdetay.addActionListener(new ActionListener() {
                        public void actionPerformed(ActionEvent e) {
                            String siparisnumara = muhasebesiparisnolist.get(jTable1.rowAtPoint(me.getPoint()));
                            ArrayList<Float> tutarfiyat = new ArrayList<>();
                            ArrayList<String> urunadi = new ArrayList<>();
                            ArrayList<String> odemetip = new ArrayList<>();
                            ArrayList<Integer> masano = new ArrayList<>();
                            ArrayList<Integer> adet = new ArrayList<>();
                            float fiyat;
                            int urunadet, urunkod, masanumara;
                            String urunad = null, odetip = null;
                            int k = 0;
                            for (int i = 0; i < muhasebesiparisnolist.size(); i++) {
                                if (siparisnumara.equals(muhasebesiparisnolist.get(i))) {
                                    fiyat = muhasebetutar.get(i);
                                    urunadet = muhasebeadetlist.get(i);
                                    urunkod = muhasebeurunkodulist.get(i);
                                    masanumara = muhasebemasanolist.get(i);
                                    odetip = muhasebeodemetipilist.get(i);
                                    sqlsorgular.urunler u = new urunler();
                                    try {
                                        urunad = u.UrunAdi_Bul(urunkod);
                                    } catch (SQLException ex) {
                                        Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
                                    }

                                    tutarfiyat.add(k, fiyat);
                                    adet.add(k, urunadet);
                                    masano.add(k, masanumara);
                                    urunadi.add(k, urunad);
                                    odemetip.add(k, odetip);
                                    k++;
                                }

                            }
                            Yonetim.Adisyon adisyon = new Yonetim.Adisyon();
                            adisyon.AdisyonGoster(odemetip, siparisnumara, adet, tutarfiyat, urunadi, masano);
                            adisyon.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
                            adisyon.setVisible(true);

                        }

                    });
                    menu.add(muhdetay);
                    menu.show(jTable1, me.getPoint().x, me.getPoint().y);
                }

            }
        });
    }

    private void HepsiniGoster() {
        DefaultTableModel stoktable = (DefaultTableModel) jTable2.getModel();
        stoktable.setRowCount(0);
        Vector[] v = new Vector[StokUrunNoList.size()];
        for (int i = 0; i < StokUrunNoList.size(); i++) {
            v[i] = new Vector();
            v[i].add(StokUrunAdiList.get(i));
            v[i].add(StokAdetList.get(i));
            v[i].add(StokTarihList.get(i));
            stoktable.insertRow(i, v[i]);
        }
        jTable2.setModel(stoktable);
        jTable2.revalidate();
        jTable2.repaint();
    }

    public void StokAcilis() {
        /**
         * Jframe ilk açıldığında stok ile ilgili islemlerin yapidigi metot. Bu
         * metotla beraber stok tablosu dolduruluyor, urunler comboboxı
         * dolduruluyor, elde edilen sonuclar daha sonra kullanılmak uzere
         * ilgili arraylistlere ekleniyor
         */
        StokUrunNoList = new ArrayList<>();
        StokUrunAdiList = new ArrayList<>();
        StokAdetList = new ArrayList<>();
        StokTarihList = new ArrayList<>();
        StokUrunGrupNoList = new ArrayList<>();

        thread.stokThread stokThread = new thread.stokThread();
        Thread th = new Thread(stokThread);
        th.start();
        try {
            th.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<sqlsorgular.stoklar> stokList = stokThread.stoklistem();
        DefaultTableModel stokTable = (DefaultTableModel) jTable2.getModel();
        DefaultComboBoxModel stokCombo = (DefaultComboBoxModel) jComboBox4.getModel();
        stokTable.setRowCount(0);
        Vector[] v = new Vector[stokList.size()];
        for (int i = 0; i < stokList.size(); i++) {
            v[i] = new Vector();
            StokUrunNoList.add(stokList.get(i).getUrun_no()); //Daha sonra kullanilmak uzere
            stokCombo.addElement(stokList.get(i).getUrun_adi()); //Urunlerin listelendigi combobox'a urunler eklenioyr
            StokUrunAdiList.add(stokList.get(i).getUrun_adi()); //Tum bilgiler arraylistlere
            StokAdetList.add(stokList.get(i).getStok_adet()); //Atiliyor
            StokTarihList.add(stokList.get(i).getTarih());
            v[i].add(stokList.get(i).getUrun_adi());
            v[i].add(stokList.get(i).getStok_adet());
            v[i].add(stokList.get(i).getTarih());
            stokTable.insertRow(i, v[i]);
        }
        jTable2.setModel(stokTable);
        jTable2.revalidate();
        jTable2.repaint();
        jComboBox4.setModel(stokCombo);
        jComboBox4.repaint();
        this.revalidate();
        this.repaint();

        //UrunGrup combobox işlemleri
        DefaultComboBoxModel UrunGrupCombo = (DefaultComboBoxModel) jComboBox3.getModel();
        List<sqlsorgular.urunler> urunGrupList = null;
        try {
            urunGrupList = new sqlsorgular.urunler().UrunGrupNoFromUrunler();
        } catch (SQLException ex) {
            Logger.getLogger(Muhasebe.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int j = 0; j < urunGrupList.size(); j++) {
            UrunGrupCombo.addElement(urunGrupList.get(j).getUrunGrup_adi());
            StokUrunGrupNoList.add(urunGrupList.get(j).getUrunGrup_no());
        }
        jComboBox3.setModel(UrunGrupCombo);
        jComboBox3.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Muhasebe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Muhasebe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Muhasebe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Muhasebe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Muhasebe muha = new Muhasebe();
                muha.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
                muha.setTitle("Muhasebe");
                muha.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboAyBaslangic;
    private javax.swing.JComboBox<String> comboAyBitis;
    private javax.swing.JComboBox<String> comboGunBaslangic;
    private javax.swing.JComboBox<String> comboGunBitis;
    private javax.swing.JComboBox<String> comboYilBaslangic;
    private javax.swing.JComboBox<String> comboYilBitis;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
